Given below is a sample interaction with the proof checker.  It assumes
that the following theorem has been provided:
	not-or-creation (~p=>(~q=>~(p|q)))
This interaction was created and checked by hand, not by a computer.
Please post questions or comments in the project 2 discussion forum.

1  show ((a=>q)=>((b=>q)=>((a|b)=>q)))
2  assume a=>q
*** bad expression: a=>q                      // needs parens
2  assume (a=>q)
3  show ((b=>q)=>((a|b)=>q))
3.1  assume b
*** invalid assumption                        // legal assumptions are (b=>q)
3.1  assume (b=>q)                            //   and ~((b=>q)=>((a|b)=>q))
3.2  show ((a|b)=>q)
3.2.1  assume (a&b)                           // legal assumptions are
*** invalid assumption                        //   (a|b) and ~((a|b)=>q)
3.2.1  assume q
*** invalid assumption
3.2.1  assume (a|b)
3.2.2  show q
3.2.2.1  assume (~q)                          // no parens with ~
*** bad expression: (~q)
3.2.2.1  assume ~q
3.2.2.2  mt 2.2.2.1 2 a
*** bad line number: 2.2.2.1
3.2.2.2  mt 3.2.1 2 a
*** bad inference
3.2.2.2  mt 3.2.2.1 2 a
*** bad inference
3.2.2.2  mt 3.2.2.1 2 ~a
3.2.2.3  mt 3.1 3.2.2.1 ~b
3.2.2.4  not-o-creation (~a=>(~b=>~(a|b)))  // theorem name misspelled
*** bad theorem name
3.2.2.4  not-or-creation (~a=>(~b=>~(b|b)))
*** bad theorem application: p=a, p=b         // p is a theorem variable
3.2.2.4  not-or-creation (~a=>(~b=>~(a|b)))
3.2.2.5  mp 3.2.2.4 3.2.2.2 (~b=>~(a|b))
3.2.2.6  mq 3.2.2.3 3.2.2.5 ~(a|b)            // since reason isn't mp, mt, co, or ic,
*** bad theorem name                          //   it must be a theorem name
3.2.2.6  mp 3.2.2.3 3.2.2.5 ~(a|b)
3.2.2.7  co 3.2.2.6 3.2.1 ((a=>q)=>((b=>q)=>((a|b)=>q)))  // legal but useless inference
3.2.2.8  co 3.2.2.6 3.2.1 q                   // innermost show is what's relevant
3.2.3  ic 3.2.2.8 ((a|b)=>q)
*** inaccessible line: 3.2.2.8                // line # should be that of 
3.2.3  ic 3.2.2 ((a|b)=>q)              //   the "shown" show
3.3  ic 3.2 ((b=>q)=>((a|b)=>q))
4  ic 3 ((a=>q)=>((b=>q)=>((a|b)=>q)))

